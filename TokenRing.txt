import java.util.Scanner; 
public class TokenRing { 
    private int numProcesses; 
    private int tokenHolder; 
    private Scanner scanner = new Scanner(System.in); 
    public TokenRing(int numProcesses) { 
        this.numProcesses = numProcesses; 
        this.tokenHolder = 0; 
    } 
    public void start() { 
        while (true) { 
            for (tokenHolder = 0; tokenHolder < numProcesses; tokenHolder++) { 
                showRing(false); 
                System.out.print("Process " + tokenHolder + ", do you want the token? (yes/no): "); 
                String response = scanner.next().toLowerCase(); 
 
                if (response.equals("yes")) { 
                    enterCriticalSection(); 
                } else { 
                    System.out.println("Process " + tokenHolder + " passed the token to the next process."); 
                }} } } 
    private void enterCriticalSection() { 
        System.out.println("Process " + tokenHolder + " is now in the Critical Section."); 
        showRing(true); 
        try { 
            Thread.sleep(2000); 
        } catch (InterruptedException e) { 
            Thread.currentThread().interrupt(); 
        } 
        System.out.println("Process " + tokenHolder + " has exited the Critical Section."); 
    } 
    private void showRing(boolean inCS) { 
        System.out.print("Processes in the ring: "); 
        for (int i = 0; i < numProcesses; i++) { 
            if (inCS && i == tokenHolder) { 
                System.out.print("[" + i + "] "); 
            } else { 
                System.out.print(i + " "); 
            }} 
        System.out.println(); 
    } 
    public static void main(String[] args) { 
        Scanner scanner = new Scanner(System.in); 
        System.out.print("Enter the number of processes in the ring: "); 
        int n = scanner.nextInt(); 
        new TokenRing(n).start(); 
    } 
}

  // javac TokenRing.java
  // java TokenRing